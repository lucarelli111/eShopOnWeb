services:
  eshopwebmvc:
    image: ${DOCKER_REGISTRY-}eshopwebmvc
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    ports:
      - "5106:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      # Datadog serverless-init configuration (agentless)
      - DD_SITE=${DD_SITE:-us3.datadoghq.com}
      - DD_API_KEY=${DD_API_KEY:?DD_API_KEY is required for Datadog}
      - DD_ENV=${DD_ENV:-local}
      - DD_LOGS_ENABLED=${DD_LOGS_ENABLED:-true}
      - DD_LOGS_INJECTION=${DD_LOGS_INJECTION:-true}
    depends_on:
      sqlserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/home_page_health_check || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
  eshoppublicapi:
    image: ${DOCKER_REGISTRY-}eshoppublicapi
    build:
      context: .
      dockerfile: src/PublicApi/Dockerfile
    ports:
      - "5200:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      # Datadog serverless-init configuration (agentless)
      - DD_SITE=${DD_SITE:-us3.datadoghq.com}
      - DD_API_KEY=${DD_API_KEY:?DD_API_KEY is required for Datadog}
      - DD_ENV=${DD_ENV:-local}
      - DD_LOGS_ENABLED=${DD_LOGS_ENABLED:-true}
      - DD_LOGS_INJECTION=${DD_LOGS_INJECTION:-true}
    depends_on:
      sqlserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=@someThingComplicated1234
      - ACCEPT_EULA=Y
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P '@someThingComplicated1234' -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  traffic-simulator:
    build:
      context: ./src/traffic-simulator
      dockerfile: Dockerfile
    environment:
      - APP_URL=http://eshopwebmvc:8080
    depends_on:
      eshopwebmvc:
        condition: service_healthy
      eshoppublicapi:
        condition: service_healthy

